window.validateCpf = cpf => {
  if (typeof cpf !== 'string') return false

  cpf = cpf.replace(/[^\d]+/g, '')

  if (cpf.length !== 11 || !!cpf.match(/(\d)\1{10}/)) return false

  cpf = cpf.split('')

  const validator = cpf
    .filter((digit, index, array) => index >= array.length - 2 && digit)
    .map(el => +el)

  const toValidate = pop =>
    cpf
      .filter((digit, index, array) => index < array.length - pop && digit)
      .map(el => +el)

  const rest = (count, pop) =>
    ((toValidate(pop).reduce((soma, el, i) => soma + el * (count - i), 0) *
      10) %
      11) %
    10

  return !(rest(10, 2) !== validator[0] || rest(11, 1) !== validator[1])
}

window.validateCardNumber = number => {
  if (number.length !== 16) return false

  let sum = 0
  for (let i = 0; i < number.length; i++) {
    let intVal = parseInt(number.substr(i, 1))
    if (i % 2 == 0) {
      intVal *= 2
      if (intVal > 9) {
        intVal = 1 + (intVal % 10)
      }
    }
    sum += intVal
  }

  return sum % 10 === 0
}

// generate from 1 to 3 seconds
window.randomTime = (max = 3) => Math.floor(Math.random() * max) + 1

window.sleep = seconds => new Promise(r => setTimeout(r, seconds * 1000))
